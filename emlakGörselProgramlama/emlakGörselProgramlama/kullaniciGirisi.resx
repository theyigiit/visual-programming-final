<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGiris.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABPdJREFUWEfF
        1WtMU2cYB/CTmCwhLjHZFz+SLNkn42KyZIljApVLBUQEuQgouKhTkcmC26JmLBg3jJtjFxd1ztt0jmEd
        iKhclVsnQXDTzekQGENOz6ktDHZ6v51n/xfapgcKrC7BD7+0532e933/fU97yhHRMxV0cD4FHZxPXGbr
        8FwWQjKUQwO0e1XBAVAdMRIXCmWAFmwSXDiUZbXxpvzuEeubv5udO/sc7sJ+54SCXptr62+SI6/LaEVf
        H+yBBcE2nEoRIOPGcDD7slp0pi33JEfRkExvP6ZZ7Rp0y5t6xmyYJ8EbX2KT2SgCpDcPT3U495bRWjjg
        kXf9hcVDsOOR07O+XTRjjZLPnhA3E0WAdY3DgQ7ndY3ZCv8kCrQbi5fyRAcFok/1RJ+IRB/hfckwUdGg
        sreg3yPndBgsWGsferlgFAHSGnif0hztqLWgny0yaSe8jyP+YMDh3t79t21D2xMz+qSMJp0pX2uwFN2V
        7B8+9sjvIETgvO29HjmzRc968z4WiZtKESC1jmdeyWgSTdseyvL2XrYANn9EtB/3v6Bn3I56M+TCEm//
        QngV9mU2Cab3HthcB9kJBSjpc7rT6nkJPQs2tvFLMcb5KAKkXOOZYxu7Lc6tD4l89uIos5r1ZtTKIMzb
        N+HAMPnhWgUXQJqiHfJYz4YW3gBLfXMUAdbU8i+lN+jNm+8T+byFE8i5abCgtgdYj8L+IQpJzg2ewADL
        2LUiQHINX5KrlRyb7hH57LhjdWL8FLD6NCWDFJLsRh15GWCZIkBSFd+Q0+lwb/yZiMn/hSij3mDB+HJg
        9Wn2DlBIMut0FMAA/hBc4iWdmH1blnO6ceyQ1yPLGOOB1YJ6t4/80mt19BRGYSIEFhSk9Z1EPtlapyfh
        ok4L3Ex2/0F+adUCPaVRWMatqhSkzJ9w7NpJ6a0uj7pC1wncTIoekN9ajUD/g4aLv6ATM7WynNZGxKS2
        eGSMDQGrBbXzPvkl/yDQU2qFMC72vA5/rU53yk0in1WVBjPGlwCrT7PtVwpJ0nciTdEBYRPfgZizQmla
        vdmxuonIJ6HG4sR4ObD6NJvvUkgSzooUoAOe9/8KVKeFl9UVRvNafPKEeq86mWLOG8yoFQLrUci/QyGJ
        PyWS1y3wbz4RIPqkwGhSm+wu9XWi+GuT4q64ParTehNqxd4ev9xu8sN1GByGMZACPIBi1hN3Qk/QBYvY
        tSJA1AmBUceexym0yBR7hfxiqt2e6DNGC+rHIBaeY/3ZXcTmLIYt0Km68I89cF5cLdG6Vsw9KZpQXxhz
        XN8Di9g8RhEg8rjgc0itGbclNhKpqpWiK6zOqDOj1sivRQl9k07oTVHfjtuiNS5PYO/Ky0TJN3ELzxkt
        6CvO6CRu5VH9C+zVRxHg9aNCoPJVNWZHUjNRVBX8GBoWYE0rTvH7MSvWKku7hQdVEIoAEV+JgcKhPKZi
        3JaM2xGDo1yhmVvkJRw7vj+r8QyJOjNiwRqHUrT4q56BIsBrR8RgDq34xmhWX7W5klpxX+twG3C0kfiU
        EZVwEe9xQtE12Bi/mkSEjauyOCKOPjFh7p7kDjygZqEIsPwLcSZRcC7iOH6OlSZ7/HWHW93o8iS2Y8M2
        mdQNTnfcVbtLVSHZ2cboLYMXUefmogzwOTabXTgUQy3cBglGoB00sAMWJ7ThgfMfKQIEXjwLQQfnU9DB
        +UPcv1f9ipf8BHIkAAAAAElFTkSuQmCC
</value>
  </data>
</root>